name: Build and Deploy dev

env:
  NODE_VERSION: '18'
  GCP_PROJECT_ID: 'rbl-common'
  SERVER_USER: 'w3reg'
  SERVER_IP: '135.181.202.179'
  DEPLOY_PATH: '/home/w3reg/dev.w3reg.org'

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      #- name: Checkout repository
      #  uses: actions/checkout@v2
      
      - name: Build the Vite app
        env:
          BUILD_TARGET: 'production'
        run: |
          sudo apt-get update
          sudo apt-get install ca-certificates curl
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

          echo ${{ secrets.VITE_BUILD_ENV }} > .env
          echo BUILD_TARGET=${{ env.BUILD_TARGET }} docker compose up -d web
          BUILD_TARGET=${{ env.BUILD_TARGET }} docker compose up -d web
          docker compose exec web find / -name dist 2>/dev/null
          docker compose exec web ls /app/dist
          docker compose cp web:/app/dist ./dist
          docker compose down
      
      - name: Compress the dist folder
        run: zip -r dist.zip dist
      
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH Key to Known Hosts
        run: |
          echo "$(ssh-keyscan -t rsa ${{ env.SERVER_IP }} 2>/dev/null)" >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} "mkdir -p ${{ env.DEPLOY_PATH }}/w3registrar-www"
          scp -r ./dist ${{ env.SERVER_USER }}@${{ env.SERVER_IP }}:${{ env.DEPLOY_PATH }}/w3registrar-www/dist
          ssh ${{ env.SERVER_USER }}@${{ env.SERVER_IP }} << EOF 
            cd ${{ env.DEPLOY_PATH }}/w3registrar-www
            unzip dist.zip
            screen -d -m bunx serve --single dist
          EOF

#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#    environment: production
#    continue-on-error: true
#    steps:
